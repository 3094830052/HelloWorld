<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hxts.unicorn.modules.resident.dao.LeftBehindResidentDao" >
  <resultMap id="BaseResultMap" type="com.hxts.unicorn.modules.resident.model.LeftBehindResident" >
    <id column="left_behind_id" property="leftBehindId" jdbcType="INTEGER" />
    <result column="resident_base_id" property="residentBaseId" jdbcType="INTEGER" />
    <result column="health_condition" property="healthCondition" jdbcType="VARCHAR" />
    <result column="person_annual_income" property="personAnnualIncome" jdbcType="VARCHAR" />
    <result column="uniformity_flag" property="uniformityFlag" jdbcType="VARCHAR" />
    <result column="left_behind_resident_type" property="leftBehindResidentType" jdbcType="VARCHAR" />
    <result column="main_member_idcard_no" property="mainMemberIdcardNo" jdbcType="VARCHAR" />
    <result column="main_member_name" property="mainMemberName" jdbcType="VARCHAR" />
    <result column="main_member_health_condition" property="mainMemberHealthCondition" jdbcType="VARCHAR" />
    <result column="left_behind_resident_relationship" property="leftBehindResidentRelationship" jdbcType="VARCHAR" />
    <result column="main_member_contact" property="mainMemberContact" jdbcType="VARCHAR" />
    <result column="main_member_address" property="mainMemberAddress" jdbcType="VARCHAR" />
    <result column="family_annual_income" property="familyAnnualIncome" jdbcType="VARCHAR" />
    <result column="difficult_appeal" property="difficultAppeal" jdbcType="VARCHAR" />
    <result column="assist_state" property="assistState" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="LeftBehindInfoResultMap" type="com.hxts.unicorn.platform.interfaces.biz.LeftBehindResidentInfo" >
    <id column="left_behind_id" property="leftBehindId" jdbcType="INTEGER" />
    <result column="resident_base_id" property="residentBaseId" jdbcType="INTEGER" />
    <result column="health_condition" property="healthCondition" jdbcType="VARCHAR" />
    <result column="person_annual_income" property="personAnnualIncome" jdbcType="VARCHAR" />
    <result column="uniformity_flag" property="uniformityFlag" jdbcType="VARCHAR" />
    <result column="left_behind_resident_type" property="leftBehindResidentType" jdbcType="VARCHAR" />
    <result column="main_member_idcard_no" property="mainMemberIdcardNo" jdbcType="VARCHAR" />
    <result column="main_member_name" property="mainMemberName" jdbcType="VARCHAR" />
    <result column="main_member_health_condition" property="mainMemberHealthCondition" jdbcType="VARCHAR" />
    <result column="left_behind_resident_relationship" property="leftBehindResidentRelationship" jdbcType="VARCHAR" />
    <result column="main_member_contact" property="mainMemberContact" jdbcType="VARCHAR" />
    <result column="main_member_address" property="mainMemberAddress" jdbcType="VARCHAR" />
    <result column="family_annual_income" property="familyAnnualIncome" jdbcType="VARCHAR" />
    <result column="difficult_appeal" property="difficultAppeal" jdbcType="VARCHAR" />
    <result column="assist_state" property="assistState" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="LeftBehindDtoResultMap" type="com.hxts.unicorn.modules.resident.dto.LeftBehindResidentDto" >
  	<result column="id_no" jdbcType="VARCHAR" property="idNo" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
    <result column="left_behind_id" property="leftBehindId" jdbcType="INTEGER" />
    <result column="resident_base_id" property="residentBaseId" jdbcType="INTEGER" />
    <result column="health_condition" property="healthCondition" jdbcType="VARCHAR" />
    <result column="left_behind_resident_type" property="leftBehindResidentType" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResidentBaseInfoResultMap" type="com.hxts.unicorn.platform.interfaces.biz.ResidentBaseInfo">
    <id column="resident_base_id" jdbcType="INTEGER" property="residentBaseId" />
    <result column="id_no" jdbcType="VARCHAR" property="idNo" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="former_name" jdbcType="VARCHAR" property="formerName" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birth_date" jdbcType="VARCHAR" property="birthDate" />
    <result column="ethnicity" jdbcType="VARCHAR" property="ethnicity" />
    <result column="native_place" jdbcType="VARCHAR" property="nativePlace" />
    <result column="marital_status" jdbcType="VARCHAR" property="maritalStatus" />
    <result column="political_status" jdbcType="VARCHAR" property="politicalStatus" />
    <result column="educational_degree" jdbcType="VARCHAR" property="educationalDegree" />
    <result column="religious_belief" jdbcType="VARCHAR" property="religiousBelief" />
    <result column="occupation_category" jdbcType="VARCHAR" property="occupationCategory" />
    <result column="occupation" jdbcType="VARCHAR" property="occupation" />
    <result column="employer" jdbcType="VARCHAR" property="employer" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
    <result column="registered_residence" jdbcType="VARCHAR" property="registeredResidence" />
    <result column="registered_residence_address" jdbcType="VARCHAR" property="registeredResidenceAddress" />
    <result column="current_residence" jdbcType="VARCHAR" property="currentResidence" />
    <result column="current_residence_address" jdbcType="VARCHAR" property="currentResidenceAddress" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="integrity" jdbcType="DECIMAL" property="integrity" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
  </resultMap>
  <sql id="Base_Column_List" >
    left_behind_id, resident_base_id, health_condition, person_annual_income, uniformity_flag, 
    left_behind_resident_type, main_member_idcard_no, main_member_name, main_member_health_condition, 
    left_behind_resident_relationship, main_member_contact, main_member_address, family_annual_income, 
    difficult_appeal, assist_state, create_user_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="LeftBehindInfoResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from left_behind_resident_info
    where left_behind_id = #{leftBehindId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from left_behind_resident_info
    where left_behind_id = #{leftBehindId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hxts.unicorn.modules.resident.model.LeftBehindResident" >
    insert into left_behind_resident_info (resident_base_id, health_condition, 
      person_annual_income, uniformity_flag, left_behind_resident_type, 
      main_member_idcard_no, main_member_name, main_member_health_condition, 
      left_behind_resident_relationship, main_member_contact, 
      main_member_address, family_annual_income, 
      difficult_appeal, assist_state, create_user_id
      )
    values (#{residentBaseId,jdbcType=INTEGER}, #{healthCondition,jdbcType=VARCHAR}, 
      #{personAnnualIncome,jdbcType=VARCHAR}, #{uniformityFlag,jdbcType=VARCHAR}, #{leftBehindResidentType,jdbcType=VARCHAR}, 
      #{mainMemberIdcardNo,jdbcType=VARCHAR}, #{mainMemberName,jdbcType=VARCHAR}, #{mainMemberHealthCondition,jdbcType=VARCHAR}, 
      #{leftBehindResidentRelationship,jdbcType=VARCHAR}, #{mainMemberContact,jdbcType=VARCHAR}, 
      #{mainMemberAddress,jdbcType=VARCHAR}, #{familyAnnualIncome,jdbcType=VARCHAR}, 
      #{difficultAppeal,jdbcType=VARCHAR}, #{assistState,jdbcType=VARCHAR}, #{createUserId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hxts.unicorn.modules.resident.model.LeftBehindResident" >
    insert into left_behind_resident_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="leftBehindId != null" >
        left_behind_id,
      </if>
      <if test="residentBaseId != null" >
        resident_base_id,
      </if>
      <if test="healthCondition != null" >
        health_condition,
      </if>
      <if test="personAnnualIncome != null" >
        person_annual_income,
      </if>
      <if test="uniformityFlag != null" >
        uniformity_flag,
      </if>
      <if test="leftBehindResidentType != null" >
        left_behind_resident_type,
      </if>
      <if test="mainMemberIdcardNo != null" >
        main_member_idcard_no,
      </if>
      <if test="mainMemberName != null" >
        main_member_name,
      </if>
      <if test="mainMemberHealthCondition != null" >
        main_member_health_condition,
      </if>
      <if test="leftBehindResidentRelationship != null" >
        left_behind_resident_relationship,
      </if>
      <if test="mainMemberContact != null" >
        main_member_contact,
      </if>
      <if test="mainMemberAddress != null" >
        main_member_address,
      </if>
      <if test="familyAnnualIncome != null" >
        family_annual_income,
      </if>
      <if test="difficultAppeal != null" >
        difficult_appeal,
      </if>
      <if test="assistState != null" >
        assist_state,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="leftBehindId != null" >
        #{leftBehindId,jdbcType=INTEGER},
      </if>
      <if test="residentBaseId != null" >
        #{residentBaseId,jdbcType=INTEGER},
      </if>
      <if test="healthCondition != null" >
        #{healthCondition,jdbcType=VARCHAR},
      </if>
      <if test="personAnnualIncome != null" >
        #{personAnnualIncome,jdbcType=VARCHAR},
      </if>
      <if test="uniformityFlag != null" >
        #{uniformityFlag,jdbcType=VARCHAR},
      </if>
      <if test="leftBehindResidentType != null" >
        #{leftBehindResidentType,jdbcType=VARCHAR},
      </if>
      <if test="mainMemberIdcardNo != null" >
        #{mainMemberIdcardNo,jdbcType=VARCHAR},
      </if>
      <if test="mainMemberName != null" >
        #{mainMemberName,jdbcType=VARCHAR},
      </if>
      <if test="mainMemberHealthCondition != null" >
        #{mainMemberHealthCondition,jdbcType=VARCHAR},
      </if>
      <if test="leftBehindResidentRelationship != null" >
        #{leftBehindResidentRelationship,jdbcType=VARCHAR},
      </if>
      <if test="mainMemberContact != null" >
        #{mainMemberContact,jdbcType=VARCHAR},
      </if>
      <if test="mainMemberAddress != null" >
        #{mainMemberAddress,jdbcType=VARCHAR},
      </if>
      <if test="familyAnnualIncome != null" >
        #{familyAnnualIncome,jdbcType=VARCHAR},
      </if>
      <if test="difficultAppeal != null" >
        #{difficultAppeal,jdbcType=VARCHAR},
      </if>
      <if test="assistState != null" >
        #{assistState,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hxts.unicorn.modules.resident.model.LeftBehindResident" >
    update left_behind_resident_info
    <set >
      <if test="residentBaseId != null" >
        resident_base_id = #{residentBaseId,jdbcType=INTEGER},
      </if>
      <if test="healthCondition != null" >
        health_condition = #{healthCondition,jdbcType=VARCHAR},
      </if>
      <if test="personAnnualIncome != null" >
        person_annual_income = #{personAnnualIncome,jdbcType=VARCHAR},
      </if>
      <if test="uniformityFlag != null" >
        uniformity_flag = #{uniformityFlag,jdbcType=VARCHAR},
      </if>
      <if test="leftBehindResidentType != null" >
        left_behind_resident_type = #{leftBehindResidentType,jdbcType=VARCHAR},
      </if>
      <if test="mainMemberIdcardNo != null" >
        main_member_idcard_no = #{mainMemberIdcardNo,jdbcType=VARCHAR},
      </if>
      <if test="mainMemberName != null" >
        main_member_name = #{mainMemberName,jdbcType=VARCHAR},
      </if>
      <if test="mainMemberHealthCondition != null" >
        main_member_health_condition = #{mainMemberHealthCondition,jdbcType=VARCHAR},
      </if>
      <if test="leftBehindResidentRelationship != null" >
        left_behind_resident_relationship = #{leftBehindResidentRelationship,jdbcType=VARCHAR},
      </if>
      <if test="mainMemberContact != null" >
        main_member_contact = #{mainMemberContact,jdbcType=VARCHAR},
      </if>
      <if test="mainMemberAddress != null" >
        main_member_address = #{mainMemberAddress,jdbcType=VARCHAR},
      </if>
      <if test="familyAnnualIncome != null" >
        family_annual_income = #{familyAnnualIncome,jdbcType=VARCHAR},
      </if>
      <if test="difficultAppeal != null" >
        difficult_appeal = #{difficultAppeal,jdbcType=VARCHAR},
      </if>
      <if test="assistState != null" >
        assist_state = #{assistState,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
    </set>
    where left_behind_id = #{leftBehindId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hxts.unicorn.modules.resident.model.LeftBehindResident" >
    update left_behind_resident_info
    set resident_base_id = #{residentBaseId,jdbcType=INTEGER},
      health_condition = #{healthCondition,jdbcType=VARCHAR},
      person_annual_income = #{personAnnualIncome,jdbcType=VARCHAR},
      uniformity_flag = #{uniformityFlag,jdbcType=VARCHAR},
      left_behind_resident_type = #{leftBehindResidentType,jdbcType=VARCHAR},
      main_member_idcard_no = #{mainMemberIdcardNo,jdbcType=VARCHAR},
      main_member_name = #{mainMemberName,jdbcType=VARCHAR},
      main_member_health_condition = #{mainMemberHealthCondition,jdbcType=VARCHAR},
      left_behind_resident_relationship = #{leftBehindResidentRelationship,jdbcType=VARCHAR},
      main_member_contact = #{mainMemberContact,jdbcType=VARCHAR},
      main_member_address = #{mainMemberAddress,jdbcType=VARCHAR},
      family_annual_income = #{familyAnnualIncome,jdbcType=VARCHAR},
      difficult_appeal = #{difficultAppeal,jdbcType=VARCHAR},
      assist_state = #{assistState,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=INTEGER}
    where left_behind_id = #{leftBehindId,jdbcType=INTEGER}
  </update>
  <select id="getLeftBehindListByKeywords" resultMap="LeftBehindDtoResultMap">
		select r.resident_base_id,r.id_no,r.name,r.sex,r.contact,l.left_behind_id,l.health_condition,l.left_behind_resident_type from left_behind_resident_info l 
		inner join resident_base_info r on l.resident_base_id = r.resident_base_id
		where 1=1
		<if test="healthCondition != null" >
        and l.health_condition = #{healthCondition,jdbcType=VARCHAR}
        </if>
        <if test="leftBehindResidentType != null">
        and l.left_behind_resident_type = #{leftBehindResidentType,jdbcType=VARCHAR}
      	</if>
        <if test="name != null" >
        and r.name like CONCAT('%', #{name,jdbcType=VARCHAR},'%')
        </if>
        <if test="idNo != null" >
        and r.id_no like CONCAT('%', #{idNo,jdbcType=VARCHAR},'%')
        </if>
		<if test="residentBaseIds != null">
			and r.resident_base_id in 
			<foreach collection="residentBaseIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
	</select>
	  <select id="queryBaseInfoByKeywords" resultMap="ResidentBaseInfoResultMap">
		select r.* from left_behind_resident_info l 
		inner join resident_base_info r on l.resident_base_id = r.resident_base_id
		where 1=1
		<if test="healthCondition != null" >
        and l.health_condition = #{healthCondition,jdbcType=VARCHAR}
        </if>
        <if test="leftBehindResidentType != null">
        and l.left_behind_resident_type = #{leftBehindResidentType,jdbcType=VARCHAR}
      	</if>
        <if test="name != null" >
        and r.name like CONCAT('%', #{name,jdbcType=VARCHAR},'%')
        </if>
        <if test="idNo != null" >
        and r.id_no like CONCAT('%', #{idNo,jdbcType=VARCHAR},'%')
        </if>
		<if test="residentBaseIds != null">
			and r.resident_base_id in 
			<foreach collection="residentBaseIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
	</select>
	<select id="getLeftBehindTypeStats" resultType="com.hxts.unicorn.modules.resident.model.StatsResult">
		select name,count(*) total from
		(
			select
				case when left_behind_resident_type = '01' then '留守老人' 
				when left_behind_resident_type = '02' then '留守妇女'
				when left_behind_resident_type = '03' then '留守儿童'
				else '其它' end name
			from left_behind_resident_info 
			<if test="residentBaseIds != null">
			where left_behind_resident_info.resident_base_id in 
			<foreach collection="residentBaseIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
			</if>
		) t group by name
	</select>
</mapper>