<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hxts.unicorn.modules.resident.dao.DrugInfoDao">
	<resultMap id="BaseResultMap" type="com.hxts.unicorn.modules.resident.model.Drug">
		<id column="drug_addict_id" jdbcType="INTEGER" property="drugAddictId" />
		<result column="resident_base_id" jdbcType="INTEGER" property="residentBaseId" />
		<result column="date_first_discovery" jdbcType="VARCHAR"
			property="dateFirstDiscovery" />
		<result column="control_situation" jdbcType="VARCHAR" property="controlSituation" />
		<result column="control_name" jdbcType="VARCHAR" property="controlName" />
		<result column="control_phone" jdbcType="VARCHAR" property="controlPhone" />
		<result column="support_situation" jdbcType="VARCHAR" property="supportSituation" />
		<result column="support_name" jdbcType="VARCHAR" property="supportName" />
		<result column="support_phone" jdbcType="VARCHAR" property="supportPhone" />
		<result column="is_crime" jdbcType="INTEGER" property="isCrime" />
		<result column="crime_condition" jdbcType="VARCHAR" property="crimeCondition" />
		<result column="drug_reasons" jdbcType="VARCHAR" property="drugReasons" />
		<result column="drug_consequence" jdbcType="VARCHAR" property="drugConsequence" />
		<result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
	</resultMap>
	<resultMap id="DrugInfoMap"
		type="com.hxts.unicorn.platform.interfaces.biz.DrugInfo">
		<id column="drug_addict_id" jdbcType="INTEGER" property="drugAddictId" />
		<result column="resident_base_id" jdbcType="INTEGER" property="residentBaseId" />
		<result column="date_first_discovery" jdbcType="VARCHAR" property="dateFirstDiscovery" />
		<result column="control_situation" jdbcType="VARCHAR" property="controlSituation" />
		<result column="control_name" jdbcType="VARCHAR" property="controlName" />
		<result column="control_phone" jdbcType="VARCHAR" property="controlPhone" />
		<result column="support_situation" jdbcType="VARCHAR" property="supportSituation" />
		<result column="support_name" jdbcType="VARCHAR" property="supportName" />
		<result column="support_phone" jdbcType="VARCHAR" property="supportPhone" />
		<result column="is_crime" jdbcType="INTEGER" property="isCrime" />
		<result column="crime_condition" jdbcType="VARCHAR" property="crimeCondition" />
		<result column="drug_reasons" jdbcType="VARCHAR" property="drugReasons" />
		<result column="drug_consequence" jdbcType="VARCHAR" property="drugConsequence" />
		<result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
	</resultMap>
	<resultMap id="DrugDtoMap" type="com.hxts.unicorn.modules.resident.dto.DrugDto">
		<result column="id_no" jdbcType="VARCHAR" property="idNo" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="sex" jdbcType="VARCHAR" property="sex" />
		<result column="contact" jdbcType="VARCHAR" property="contact" />
		<result column="date_first_discovery" property="datefirstdiscover" jdbcType="VARCHAR" />
		<result column="is_crime" property="iscrime" jdbcType="INTEGER" />
		<result column="control_situation" property="controlsituation" jdbcType="VARCHAR" />
		<result column="drug_addict_id" property="drugid" jdbcType="INTEGER" />
		<result column="resident_base_id" property="residentBaseId" jdbcType="INTEGER" />
	</resultMap>
	  <resultMap id="DtoResultMap" type="com.hxts.unicorn.modules.resident.dto.SpecialCrowdDto" >
    <id column="label_id" property="labelId" jdbcType="INTEGER" />  
    <result column="resident_base_id" property="residentBaseId" jdbcType="INTEGER" />
    <result column="id_no" jdbcType="VARCHAR" property="idNo" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
    <result column="special_type" jdbcType="VARCHAR" property="specialType" />
  </resultMap>
  <resultMap id="ResidentBaseInfoResultMap" type="com.hxts.unicorn.platform.interfaces.biz.ResidentBaseInfo">
    <id column="resident_base_id" jdbcType="INTEGER" property="residentBaseId" />
    <result column="id_no" jdbcType="VARCHAR" property="idNo" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="former_name" jdbcType="VARCHAR" property="formerName" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birth_date" jdbcType="VARCHAR" property="birthDate" />
    <result column="ethnicity" jdbcType="VARCHAR" property="ethnicity" />
    <result column="native_place" jdbcType="VARCHAR" property="nativePlace" />
    <result column="marital_status" jdbcType="VARCHAR" property="maritalStatus" />
    <result column="political_status" jdbcType="VARCHAR" property="politicalStatus" />
    <result column="educational_degree" jdbcType="VARCHAR" property="educationalDegree" />
    <result column="religious_belief" jdbcType="VARCHAR" property="religiousBelief" />
    <result column="occupation_category" jdbcType="VARCHAR" property="occupationCategory" />
    <result column="occupation" jdbcType="VARCHAR" property="occupation" />
    <result column="employer" jdbcType="VARCHAR" property="employer" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
    <result column="registered_residence" jdbcType="VARCHAR" property="registeredResidence" />
    <result column="registered_residence_address" jdbcType="VARCHAR" property="registeredResidenceAddress" />
    <result column="current_residence" jdbcType="VARCHAR" property="currentResidence" />
    <result column="current_residence_address" jdbcType="VARCHAR" property="currentResidenceAddress" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="integrity" jdbcType="DECIMAL" property="integrity" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
  </resultMap>
	<select id="querydrugInfoListByKeywords" resultMap="DrugDtoMap">
		select
		r.id_no,r.name,r.sex,r.contact,dr.date_first_discovery,dr.is_crime,dr.control_situation,dr.drug_addict_id
		,dr.resident_base_id from drug_addict_info dr inner join
		resident_base_info r on dr.resident_base_id = r.resident_base_id
		where 1=1
		<if test="controlsituation != null">
        and dr.control_situation = #{controlsituation,jdbcType=VARCHAR}
      	</if>
      	<if test="iscrime != null">
        and dr.is_crime = #{iscrime,jdbcType=INTEGER}
      	</if>
        <if test="name != null" >
        and r.name like CONCAT('%', #{name,jdbcType=VARCHAR},'%')
        </if>
        <if test="datefirstdiscover != null" >
        and DATE_SUB(CURDATE(), INTERVAL #{datefirstdiscover,jdbcType=INTEGER} MONTH) &lt;= date_first_discovery
        </if>
        <if test="idNo != null" >
        and r.id_no like CONCAT('%', #{idNo,jdbcType=VARCHAR},'%')
        </if>
        <if test="residentBaseIds != null">
			and r.resident_base_id in 
			<foreach collection="residentBaseIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
	</select>
	<sql id="Base_Column_List">
		drug_addict_id, resident_base_id, date_first_discovery,
		control_situation,
		control_name,
		control_phone, support_situation,
		support_name, support_phone, is_crime,
		crime_condition,
		drug_reasons,
		drug_consequence, create_user_id
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="DrugInfoMap">
		select
		<include refid="Base_Column_List" />
		from drug_addict_info
		where drug_addict_id =
		#{drugAddictId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		drug_addict_info
		where drug_addict_id =
		#{drugAddictId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.hxts.unicorn.modules.resident.model.Drug">
		insert into drug_addict_info
		(drug_addict_id, resident_base_id,
		date_first_discovery,
		control_situation, control_name, control_phone,
		support_situation,
		support_name, support_phone,
		is_crime, crime_condition, drug_reasons,
		drug_consequence, create_user_id)
		values
		(#{drugAddictId,jdbcType=INTEGER},
		#{residentBaseId,jdbcType=INTEGER},
		#{dateFirstDiscovery,jdbcType=VARCHAR},
		#{controlSituation,jdbcType=VARCHAR}, #{controlName,jdbcType=VARCHAR},
		#{controlPhone,jdbcType=VARCHAR},
		#{supportSituation,jdbcType=VARCHAR}, #{supportName,jdbcType=VARCHAR},
		#{supportPhone,jdbcType=VARCHAR},
		#{isCrime,jdbcType=INTEGER},
		#{crimeCondition,jdbcType=VARCHAR}, #{drugReasons,jdbcType=VARCHAR},
		#{drugConsequence,jdbcType=VARCHAR}, #{createUserId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.hxts.unicorn.modules.resident.model.Drug">
		insert into drug_addict_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="drugAddictId != null">
				drug_addict_id,
			</if>
			<if test="residentBaseId != null">
				resident_base_id,
			</if>
			<if test="dateFirstDiscovery != null">
				date_first_discovery,
			</if>
			<if test="controlSituation != null">
				control_situation,
			</if>
			<if test="controlName != null">
				control_name,
			</if>
			<if test="controlPhone != null">
				control_phone,
			</if>
			<if test="supportSituation != null">
				support_situation,
			</if>
			<if test="supportName != null">
				support_name,
			</if>
			<if test="supportPhone != null">
				support_phone,
			</if>
			<if test="isCrime != null">
				is_crime,
			</if>
			<if test="crimeCondition != null">
				crime_condition,
			</if>
			<if test="drugReasons != null">
				drug_reasons,
			</if>
			<if test="drugConsequence != null">
				drug_consequence,
			</if>
			<if test="createUserId != null">
				create_user_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="drugAddictId != null">
				#{drugAddictId,jdbcType=INTEGER},
			</if>
			<if test="residentBaseId != null">
				#{residentBaseId,jdbcType=INTEGER},
			</if>
			<if test="dateFirstDiscovery != null">
				#{dateFirstDiscovery,jdbcType=VARCHAR},
			</if>
			<if test="controlSituation != null">
				#{controlSituation,jdbcType=VARCHAR},
			</if>
			<if test="controlName != null">
				#{controlName,jdbcType=VARCHAR},
			</if>
			<if test="controlPhone != null">
				#{controlPhone,jdbcType=VARCHAR},
			</if>
			<if test="supportSituation != null">
				#{supportSituation,jdbcType=VARCHAR},
			</if>
			<if test="supportName != null">
				#{supportName,jdbcType=VARCHAR},
			</if>
			<if test="supportPhone != null">
				#{supportPhone,jdbcType=VARCHAR},
			</if>
			<if test="isCrime != null">
				#{isCrime,jdbcType=INTEGER},
			</if>
			<if test="crimeCondition != null">
				#{crimeCondition,jdbcType=VARCHAR},
			</if>
			<if test="drugReasons != null">
				#{drugReasons,jdbcType=VARCHAR},
			</if>
			<if test="drugConsequence != null">
				#{drugConsequence,jdbcType=VARCHAR},
			</if>
			<if test="createUserId != null">
				#{createUserId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.hxts.unicorn.modules.resident.model.Drug">
		update drug_addict_info
		<set>
			<if test="residentBaseId != null">
				resident_base_id = #{residentBaseId,jdbcType=INTEGER},
			</if>
			<if test="dateFirstDiscovery != null">
				date_first_discovery =
				#{dateFirstDiscovery,jdbcType=VARCHAR},
			</if>
			<if test="controlSituation != null">
				control_situation = #{controlSituation,jdbcType=VARCHAR},
			</if>
			<if test="controlName != null">
				control_name = #{controlName,jdbcType=VARCHAR},
			</if>
			<if test="controlPhone != null">
				control_phone = #{controlPhone,jdbcType=VARCHAR},
			</if>
			<if test="supportSituation != null">
				support_situation = #{supportSituation,jdbcType=VARCHAR},
			</if>
			<if test="supportName != null">
				support_name = #{supportName,jdbcType=VARCHAR},
			</if>
			<if test="supportPhone != null">
				support_phone = #{supportPhone,jdbcType=VARCHAR},
			</if>
			<if test="isCrime != null">
				is_crime = #{isCrime,jdbcType=INTEGER},
			</if>
			<if test="crimeCondition != null">
				crime_condition = #{crimeCondition,jdbcType=VARCHAR},
			</if>
			<if test="drugReasons != null">
				drug_reasons = #{drugReasons,jdbcType=VARCHAR},
			</if>
			<if test="drugConsequence != null">
				drug_consequence = #{drugConsequence,jdbcType=VARCHAR},
			</if>
			<if test="createUserId != null">
				create_user_id = #{createUserId,jdbcType=INTEGER},
			</if>
		</set>
		where drug_addict_id = #{drugAddictId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.hxts.unicorn.modules.resident.model.Drug">
		update
		drug_addict_info
		set resident_base_id =
		#{residentBaseId,jdbcType=INTEGER},
		date_first_discovery =
		#{dateFirstDiscovery,jdbcType=VARCHAR},
		control_situation =
		#{controlSituation,jdbcType=VARCHAR},
		control_name =
		#{controlName,jdbcType=VARCHAR},
		control_phone =
		#{controlPhone,jdbcType=VARCHAR},
		support_situation =
		#{supportSituation,jdbcType=VARCHAR},
		support_name =
		#{supportName,jdbcType=VARCHAR},
		support_phone =
		#{supportPhone,jdbcType=VARCHAR},
		is_crime =
		#{isCrime,jdbcType=INTEGER},
		crime_condition =
		#{crimeCondition,jdbcType=VARCHAR},
		drug_reasons =
		#{drugReasons,jdbcType=VARCHAR},
		drug_consequence =
		#{drugConsequence,jdbcType=VARCHAR},
		create_user_id =
		#{createUserId,jdbcType=INTEGER}
		where drug_addict_id =
		#{drugAddictId,jdbcType=INTEGER}
	</update>
    <select id="getSpecialTypeStats" resultType="com.hxts.unicorn.modules.resident.model.StatsResult">
		select '吸毒' name,count(*) total from drug_addict_info
		<if test="residentBaseIds != null">
			where drug_addict_info.resident_base_id in 
			<foreach collection="residentBaseIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if> 
		union 
		select '刑满释放' name,count(*) total from emancipist_info
		<if test="residentBaseIds != null">
			where emancipist_info.resident_base_id in 
			<foreach collection="residentBaseIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		union 
		select '非法上访' name,count(*) total from illegal_pertitioner_info
		<if test="residentBaseIds != null">
			where illegal_pertitioner_info.resident_base_id in 
			<foreach collection="residentBaseIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
  </select>
  
  <select id="getSpecialTypeStatsCount" resultType="Integer">
		select resident_base_id from drug_addict_info
		<if test="residentBaseIds != null">
			where drug_addict_info.resident_base_id in 
			<foreach collection="residentBaseIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if> 
		union 
		select resident_base_id from emancipist_info
		<if test="residentBaseIds != null">
			where emancipist_info.resident_base_id in 
			<foreach collection="residentBaseIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		union 
		select resident_base_id from illegal_pertitioner_info
		<if test="residentBaseIds != null">
			where illegal_pertitioner_info.resident_base_id in 
			<foreach collection="residentBaseIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
  </select>
  
  <select id="querySpecialCrowdListByKeywords" resultMap="DtoResultMap">
		select r.resident_base_id,r.name,r.sex,r.id_no,r.contact,d.drug_addict_id label_id,'drug' special_type from drug_addict_info d 
		inner join resident_base_info r on d.resident_base_id = r.resident_base_id
		where 1=1
        <if test="specialType != null" >
        and 'drug' = #{specialType,jdbcType=VARCHAR}
        </if>
        <if test="name != null" >
        and r.name like CONCAT('%', #{name,jdbcType=VARCHAR},'%')
        </if>
        <if test="idNo != null" >
        and r.id_no like CONCAT('%', #{idNo,jdbcType=VARCHAR},'%')
        </if>
		<if test="residentBaseIds != null">
			and r.resident_base_id in 
			<foreach collection="residentBaseIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		union 
		select r.resident_base_id,r.name,r.sex,r.id_no,r.contact,e.emancipist_id label_id,'emancipist' special_type from emancipist_info e 
		inner join resident_base_info r on e.resident_base_id = r.resident_base_id
		where 1=1
        <if test="specialType != null" >
        and 'emancipist' = #{specialType,jdbcType=VARCHAR}
        </if>
        <if test="name != null" >
        and r.name like CONCAT('%', #{name,jdbcType=VARCHAR},'%')
        </if>
        <if test="idNo != null" >
        and r.id_no like CONCAT('%', #{idNo,jdbcType=VARCHAR},'%')
        </if>
		<if test="residentBaseIds != null">
			and r.resident_base_id in 
			<foreach collection="residentBaseIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		union
		select r.resident_base_id,r.name,r.sex,r.id_no,r.contact,i.illegal_pertitioner_id label_id,'pertition' special_type from illegal_pertitioner_info i 
		inner join resident_base_info r on i.resident_base_id = r.resident_base_id
		where 1=1
         <if test="specialType != null" >
        and 'pertition' = #{specialType,jdbcType=VARCHAR}
        </if>
        <if test="name != null" >
        and r.name like CONCAT('%', #{name,jdbcType=VARCHAR},'%')
        </if>
        <if test="idNo != null" >
        and r.id_no like CONCAT('%', #{idNo,jdbcType=VARCHAR},'%')
        </if>
		<if test="residentBaseIds != null">
			and r.resident_base_id in 
			<foreach collection="residentBaseIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
	</select>
	
	<select id="queryBaseInfoByKeywords" resultMap="ResidentBaseInfoResultMap">
		select r.* from drug_addict_info d 
		inner join resident_base_info r on d.resident_base_id = r.resident_base_id
		where 1=1
        <if test="specialType != null" >
        and 'drug' = #{specialType,jdbcType=VARCHAR}
        </if>
        <if test="name != null" >
        and r.name like CONCAT('%', #{name,jdbcType=VARCHAR},'%')
        </if>
        <if test="idNo != null" >
        and r.id_no like CONCAT('%', #{idNo,jdbcType=VARCHAR},'%')
        </if>
		<if test="residentBaseIds != null">
			and r.resident_base_id in 
			<foreach collection="residentBaseIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		union 
		select r.* from emancipist_info e 
		inner join resident_base_info r on e.resident_base_id = r.resident_base_id
		where 1=1
        <if test="specialType != null" >
        and 'emancipist' = #{specialType,jdbcType=VARCHAR}
        </if>
        <if test="name != null" >
        and r.name like CONCAT('%', #{name,jdbcType=VARCHAR},'%')
        </if>
        <if test="idNo != null" >
        and r.id_no like CONCAT('%', #{idNo,jdbcType=VARCHAR},'%')
        </if>
		<if test="residentBaseIds != null">
			and r.resident_base_id in 
			<foreach collection="residentBaseIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		union
		select r.* from illegal_pertitioner_info i 
		inner join resident_base_info r on i.resident_base_id = r.resident_base_id
		where 1=1
         <if test="specialType != null" >
        and 'pertition' = #{specialType,jdbcType=VARCHAR}
        </if>
        <if test="name != null" >
        and r.name like CONCAT('%', #{name,jdbcType=VARCHAR},'%')
        </if>
        <if test="idNo != null" >
        and r.id_no like CONCAT('%', #{idNo,jdbcType=VARCHAR},'%')
        </if>
		<if test="residentBaseIds != null">
			and r.resident_base_id in 
			<foreach collection="residentBaseIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
	</select>
</mapper>